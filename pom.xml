// File: pom.xml
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example</groupId>
  <artifactId>InventoryManagementSystem</artifactId>
  <version>1.0.0</version>
  <packaging>jar</packaging>

  <properties>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <junit.jupiter.version>5.10.0</junit.jupiter.version>
    <sqlite.jdbc.version>3.43.0.0</sqlite.jdbc.version>
    <jfreechart.version>1.5.3</jfreechart.version>
  </properties>

  <dependencies>
    <!-- SQLite JDBC -->
    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <version>${sqlite.jdbc.version}</version>
    </dependency>

    <!-- JFreeChart -->
    <dependency>
      <groupId>org.jfree</groupId>
      <artifactId>jfreechart</artifactId>
      <version>${jfreechart.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jfree</groupId>
      <artifactId>jcommon</artifactId>
      <version>1.0.24</version>
    </dependency>

    <!-- JUnit 5 -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Compiler plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <release>11</release>
        </configuration>
      </plugin>

      <!-- Surefire for unit tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M7</version>
      </plugin>

      <!-- Failsafe for integration tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M7</version>
        <configuration>
          <includes>
            <include>**/*IT.java</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>

// File: src/test/java/InventorySystemIT.java
import org.junit.jupiter.api.*;
import static org.junit.jupiter.api.Assertions.*;
import java.sql.SQLException;

public class InventorySystemIT {
    private static InventorySystem inventory;

    @BeforeAll
    static void init() throws SQLException {
        inventory = new InventorySystem();
    }

    @Test
    void testAddAndRetrieveProduct() throws SQLException {
        inventory.addProduct("ITProduct", 9.99, 3, "ITCat");
        assertFalse(inventory.searchProducts("ITProduct").isEmpty());
    }

    @Test
    void testExportImportCycle() throws Exception {
        String temp = System.getProperty("java.io.tmpdir") + "/test.csv";
        inventory.addProduct("X", 1.0, 1, "c");
        inventory.exportToCSV(temp);
        inventory.deleteProduct(1);
        inventory.importFromCSV(temp);
        assertFalse(inventory.searchProducts("X").isEmpty());
    }

    @AfterAll
    static void cleanup() throws SQLException {
        for (Product p : inventory.getProducts()) {
            inventory.deleteProduct(p.getId());
        }
    }
}

// README.md snippet:
// To build, run: mvn clean package
// To run integration tests: mvn verify
